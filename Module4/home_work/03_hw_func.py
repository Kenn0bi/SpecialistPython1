# Даны координаты центров двух окружностей (x1; y1) (x2; y2) и и их радиусы  R1 и R2.
# Находится ли одна окружность целиком внутри другой

def distance(x1, y1, x2, y2):
    return ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5


def circle_inside(c1, r1, c2, r2):
    """
    Функция определяет находится ли одна окружность целиком внутри другой или нет.
    :param c1: координаты x, y центра 1-ой окружности
    :param r1: радиус 1-ой окружности
    :param c2: координаты x, y центра 2-ой окружности
    :param r2: радиус 2-ой окружности
    :return: True - если сумма расстояния между центрами и наименьшего радиуса меньше или равна наибольшему радиусу
    """
    return distance(c1[0], c1[1], c2[0], c2[1]) + min(r1, r2) <= max(r1, r2)


# Координаты x, y и радиус 1-ой окружности
c1 = 0, 0
r1 = 10
# Координаты x, y и радиус 2-ой окружности
c2 = 5, 0
r2 = 5

print(circle_inside(c1, r1, c2, r2))

